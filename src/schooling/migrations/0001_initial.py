# Generated by Django 5.0.6 on 2024-06-14 16:29

import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StudyClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_class_name', models.CharField(max_length=64, unique=True, verbose_name='Название учебного класса')),
                ('study_class_number', models.PositiveIntegerField(verbose_name='Номер учебного класса')),
            ],
            options={
                'verbose_name': 'учебный класс',
                'verbose_name_plural': 'Учебные классы',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название предмета')),
                ('subject_key', models.CharField(blank=True, max_length=128, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'название предмета',
                'verbose_name_plural': 'Названия предметов',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('name', models.CharField(max_length=150, verbose_name='Имя')),
                ('surname', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Номер телефона')),
                ('last_login_date', models.DateField(auto_now=True, verbose_name='Последнее посещение')),
                ('registration_date', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('state', models.CharField(choices=[('start', 'Start'), ('help', 'Help'), ('schedule', 'Schedule'), ('feedback', 'Feedback'), ('feedback_subject_msg', 'Feedback Subject'), ('feedback_body_msg', 'Feedback Body')], default='start', max_length=50, verbose_name='Состояние пользователя')),
                ('paid_lessons', models.PositiveIntegerField(default=0, verbose_name='Оплаченые занятия')),
                ('parents_contacts', models.CharField(max_length=256, verbose_name='Контакты представителей')),
                ('study_class_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='students', to='schooling.studyclass', verbose_name='ID учебного класса')),
                ('subjects', models.ManyToManyField(to='schooling.subject', verbose_name='Предмет')),
            ],
            options={
                'verbose_name': 'студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('name', models.CharField(max_length=150, verbose_name='Имя')),
                ('surname', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Номер телефона')),
                ('last_login_date', models.DateField(auto_now=True, verbose_name='Последнее посещение')),
                ('registration_date', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('state', models.CharField(choices=[('start', 'Start'), ('help', 'Help'), ('schedule', 'Schedule'), ('feedback', 'Feedback'), ('feedback_subject_msg', 'Feedback Subject'), ('feedback_body_msg', 'Feedback Body')], default='start', max_length=50, verbose_name='Состояние пользователя')),
                ('competence', models.ManyToManyField(to='schooling.subject', verbose_name='Предмет')),
                ('study_classes', models.ManyToManyField(to='schooling.studyclass', verbose_name='Учебный класс')),
            ],
            options={
                'verbose_name': 'преподаватель',
                'verbose_name_plural': 'Преподаватели',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название занятия')),
                ('datetime_start', models.DateTimeField(verbose_name='Время начала занятия')),
                ('datetime_end', models.DateTimeField(verbose_name='Время окончания занятия')),
                ('is_passed', models.BooleanField(default=False, verbose_name='Занятие прошло')),
                ('test_lesson', models.BooleanField(default=False, verbose_name='Тестовое занятие')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='schooling.student', verbose_name='Студент')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='schooling.subject', verbose_name='Предмет')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='schooling.teacher', verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'занятие',
                'verbose_name_plural': 'Занятия',
            },
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(fields=('name', 'subject', 'teacher_id', 'student_id', 'datetime_start', 'datetime_end'), name='unique_lesson'),
        ),
    ]
